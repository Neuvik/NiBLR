resource "aws_instance" "exit_node{{ NUM }}" {
  ami           = data.aws_ami.ubuntu.id # This is a standard Ubuntu AMI
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.public_subnet.id # This is the main availabilty zone subnet group

  vpc_security_group_ids = [
    aws_security_group.default.id # This is a standard security group
  ]

  root_block_device {
    volume_size = 50 # This is options, 50GB hard disk may be rather large.
  }

  user_data = data.local_file.cloud_init_exit_node_yaml{{ NUM }}.content

  source_dest_check = false

  tags = {
    Name = "exit-node{{ NUM }}"
  }
}

resource "local_file" "aws_exit_node{{ NUM }}" {
  content = templatefile("${path.module}/templates/inventory.tmpl", {
    cat      = "aws-exit-node{{ NUM }}",
    ip_addrs = [aws_instance.exit_node{{ NUM }}.public_ip],
    vars = [
      "ansible_user: ansible",
      "ansible_python_interpreter: /usr/bin/python3",
      "ansible_ssh_private_key_file: ~/.ssh/id_rsa",
      "file: exit-node-wg0{{ NUM }}.conf"
    ]
    }
  )
  filename = "${path.module}/../ansible/inventory/aws-exit-node{{ NUM }}.yml"
}

# Configuration for the Exit nodes VPN server
resource "local_file" "cloud_init_exit_node_template{{ NUM }}" {
  content = templatefile("${path.module}/templates/cloud-init-exit-node.tmpl", {
    hostname    = "exit-node{{ NUM }}",
    operators   = var.operators_list,
    ansible_key = file("~/.ssh/id_rsa.pub")
  })
  filename = "${path.module}/files/cloud-init-exit-node{{ NUM }}.yaml"
}

data "local_file" "cloud_init_exit_node_yaml{{ NUM }}" {
  filename   = local_file.cloud_init_exit_node_template{{ NUM }}.filename
  depends_on = [local_file.cloud_init_exit_node_template{{ NUM }}]
}


# Configuration for the Exit nodes VPN server
resource "local_file" "cloud_init_exit_node_wg0{{ NUM }}" {
  content = templatefile("${path.module}/templates/exit-node-wg0.tmpl", {
    exit_node_vpn_priv_ip = "10.10.10.1{% if NUM < 10 %}0{{ NUM }}{% else %}{{ NUM }}{% endif %}",
    exit_node_priv_key    = file("../wireguard_configs/exit-hub{{ NUM }}.key"),
    ingress_pub_key       = file("../wireguard_configs/wgHub.pub"),
    ingress_node_ip       = "10.10.10.{{ NUM }}"
  })
  filename = "${path.module}/../ansible/roles/exit_nodes/files/exit-node-wg0{{ NUM }}.conf"
}

data "local_file" "cloud_init_exit_node_wg0{{ NUM }}_conf" {
  filename   = local_file.cloud_init_exit_node_wg0{{ NUM }}.filename
  depends_on = [local_file.cloud_init_exit_node_wg0{{ NUM }}]
}

# Configuration for the Ingress nodes matching the exit node configuration
resource "local_file" "cloud_init_ingress_exit_node_wg0{{ NUM }}" {
  content = templatefile("${path.module}/templates/ingress-node-exit-node-conf.tmpl", {
    exit_node_pub_key     = file("../wireguard_configs/exit-hub{{ NUM }}.pub"),
    ingress_priv_key      = file("../wireguard_configs/wgHub.key"),
    ingress_node_ip       = "10.10.10.{{ NUM }}",
    ingress_vpn_address   = aws_instance.exit_node{{ NUM }}.public_ip
    num                   = "{{ NUM }}",
    exit_node_vpn_priv_ip = "1disc0.10.10.1{% if NUM < 10 %}0{{ NUM }}{% else %}{{ NUM }}{% endif %}",
  })
  filename = "${path.module}/../ansible/roles/wireguard_hub/files/exit-node{{ NUM }}.conf"
}

data "local_file" "cloud_init_ingress_exit_node_wg0{{ NUM }}_conf" {
  filename   = local_file.cloud_init_exit_node_wg0{{ NUM }}.filename
  depends_on = [local_file.cloud_init_exit_node_wg0{{ NUM }}]
}